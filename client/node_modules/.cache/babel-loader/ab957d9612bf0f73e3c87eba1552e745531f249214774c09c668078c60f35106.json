{"ast":null,"code":"const API_URL='http://localhost:8000';// TODO: Once API is ready.\n// Load planets and return as JSON.\nasync function httpGetPlanets(){const response=await fetch(`${API_URL}/planets`);return await response.json();}// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches(){const response=await fetch(`${API_URL}/launches`);const fetchLaunches=await response.json();return fetchLaunches.sort((a,b)=>{return a.flightNumber-b.flightNumber;});}// TODO: Once API is ready.\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch){try{return await fetch(`${API_URL}/launches`,{method:\"post\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(launch)});}catch(err){return{ok:false};}}// TODO: Once API is ready.\n// Delete launch with given ID.\nasync function httpAbortLaunch(id){try{return await fetch(`${API_URL}/launches/${id}`,{method:\"delete\"});}catch(err){return{ok:false};}}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","response","fetch","json","httpGetLaunches","fetchLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","err","ok","httpAbortLaunch","id"],"sources":["/Users/emadalbalas/developerProjects/NASA-PROJECT/client/src/hooks/requests.js"],"sourcesContent":["const API_URL = 'http://localhost:8000';\n\n// TODO: Once API is ready.\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n  const response = await fetch(`${API_URL}/planets`);\n  return await response.json();\n}\n\n// TODO: Once API is ready.\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n  const response = await fetch(`${API_URL}/launches`);\n  const fetchLaunches = await response.json();\n  return fetchLaunches.sort((a, b) => {\n    return a.flightNumber - b.flightNumber;\n  });\n}\n\n// TODO: Once API is ready.\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n  try {\n    return await fetch(`${API_URL}/launches`, {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(launch),\n    });\n  } catch (err) {\n    return {\n      ok: false,\n    }\n  }\n}\n\n// TODO: Once API is ready.\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n  try {\n    return await fetch(`${API_URL}/launches/${id}`, {\n      method: \"delete\",\n    });\n  } catch (err) {\n    return {\n      ok: false,\n    }\n  }\n}\n\nexport {\n  httpGetPlanets,\n  httpGetLaunches,\n  httpSubmitLaunch,\n  httpAbortLaunch,\n};"],"mappings":"AAAA,KAAM,CAAAA,OAAO,CAAG,uBAAuB,CAEvC;AACA;AACA,cAAe,CAAAC,cAAcA,CAAA,CAAG,CAC9B,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,OAAO,UAAU,CAAC,CAClD,MAAO,MAAM,CAAAE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC9B,CAEA;AACA;AACA,cAAe,CAAAC,eAAeA,CAAA,CAAG,CAC/B,KAAM,CAAAH,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAC,CACnD,KAAM,CAAAM,aAAa,CAAG,KAAM,CAAAJ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAC3C,MAAO,CAAAE,aAAa,CAACC,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CAClC,MAAO,CAAAD,CAAC,CAACE,YAAY,CAAGD,CAAC,CAACC,YAAY,CACxC,CAAC,CAAC,CACJ,CAEA;AACA;AACA,cAAe,CAAAC,gBAAgBA,CAACC,MAAM,CAAE,CACtC,GAAI,CACF,MAAO,MAAM,CAAAT,KAAK,CAAC,GAAGH,OAAO,WAAW,CAAE,CACxCa,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACJ,CAAE,MAAOM,GAAG,CAAE,CACZ,MAAO,CACLC,EAAE,CAAE,KACN,CAAC,CACH,CACF,CAEA;AACA;AACA,cAAe,CAAAC,eAAeA,CAACC,EAAE,CAAE,CACjC,GAAI,CACF,MAAO,MAAM,CAAAlB,KAAK,CAAC,GAAGH,OAAO,aAAaqB,EAAE,EAAE,CAAE,CAC9CR,MAAM,CAAE,QACV,CAAC,CAAC,CACJ,CAAE,MAAOK,GAAG,CAAE,CACZ,MAAO,CACLC,EAAE,CAAE,KACN,CAAC,CACH,CACF,CAEA,OACElB,cAAc,CACdI,eAAe,CACfM,gBAAgB,CAChBS,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}